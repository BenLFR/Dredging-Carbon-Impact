name: Pipeline-CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:        # déclenchement manuel optionnel

jobs:
  build:
    runs-on: ubuntu-latest

    container:               # ① image avec libs spatiales pré-installées
      image: rocker/geospatial:4.4.3

    env:                     # ② réutilise votre lockfile
      RENV_PATHS_ROOT: ~/.local/share/renv
      RENV_CONFIG_CACHE_SYMLINKS: "FALSE"

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Set up R
      uses: r-lib/actions/setup-r@v2

    - name: Session information (avant renv)
      run: |
        echo "## Basic system info"
        gdalinfo --version || true
        projinfo --version || true
        Rscript -e 'sessionInfo()'

    - name: Restore renv cache
      uses: r-lib/actions/setup-renv@v2
      with:
        cache-version: 2      # purge facile si besoin

    - name: Run pipeline
      id:  targetrun
      run: |
        Rscript -e 'targets::tar_make()'

    # ------------------------------------------------------------------
    # ③ Étapes de débogage supplémentaires
    # ------------------------------------------------------------------
    - name: Print sessionInfo() after build
      if: always()
      run: |
        Rscript -e 'sessionInfo()'

    - name: Upload full logs when the job fails
      if: failure()           # n’exécute que si ça a échoué
      uses: actions/upload-artifact@v4
      with:
        name: full-log
        path: ${{ runner.temp }}/_temp/_runner_files/*

    # ------------------------------------------------------------------
    # ④ Facultatif : Publier le rapport de targets
    # ------------------------------------------------------------------
    # - name: Upload tar_make() visualisation
    #   if: success()
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: targets-visual
    #     path: targets.html
